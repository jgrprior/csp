DROP TABLE IF EXISTS activity;
DROP TABLE IF EXISTS room_member;
DROP TABLE IF EXISTS buddy;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS room;

CREATE TABLE user (
    user_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    email TEXT NOT NULL UNIQUE,
    verified BOOLEAN NOT NULL DEFAULT false,
    hashed_password TEXT NOT NULL,
    nickname TEXT NOT NULL UNIQUE,
    bio TEXT NOT NULL DEFAULT "",
    gender TEXT,
    dob TIMESTAMP,
    active BOOLEAN NOT NULL DEFAULT true,
    joined TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    administrator BOOLEAN NOT NULL DEFAULT false
);

CREATE TABLE room (
    room_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    owner_id INTEGER NOT NULL REFERENCES user(user_id) ON DELETE CASCADE,
    name TEXT NOT NULL UNIQUE,
    description TEXT NOT NULL DEFAULT "",
    units TEXT NOT NULL,
    access TEXT NOT NULL DEFAULT "",
    absolute BOOLEAN NOT NULL DEFAULT true,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE activity (
    activity_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    room_id INTEGER NOT NULL REFERENCES room(room_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES user(user_id) ON DELETE CASCADE,
    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    performance INTEGER NOT NULL,
    effort INTEGER NOT NULL
);

CREATE TABLE room_member (
    member_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    room_id INTEGER NOT NULL REFERENCES room(room_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES user(user_id) ON DELETE CASCADE,
    joined TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    departed TIMESTAMP
);

CREATE TABLE buddy (
    buddy_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    room_id INTEGER NOT NULL REFERENCES room(room_id) ON DELETE CASCADE,
    inviter_id INTEGER NOT NULL REFERENCES user(user_id) ON DELETE CASCADE,
    invitee_id INTEGER NOT NULL REFERENCES user(user_id) ON DELETE CASCADE,
    sent TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    accepted TIMESTAMP
);